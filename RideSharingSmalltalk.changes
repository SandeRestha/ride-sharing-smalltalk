----QUIT----2025-06-26T10:23:38.448886+02:00 Pharo13.0-SNAPSHOT-64bit-e698f20169.image priorSource: 0!----QUIT----2025-06-26T10:23:38.450755+02:00 Pharo13.0-SNAPSHOT-64bit-e698f20169.image priorSource: 0!----QUIT----2025-06-26T10:23:58.641326+02:00 Pharo13.0-SNAPSHOT-64bit-e698f20169.image priorSource: 104!----QUIT----2025-06-26T10:23:58.642459+02:00 Pharo13.0-SNAPSHOT-64bit-e698f20169.image priorSource: 208!----QUIT----2025-06-26T10:23:59.131614+02:00 Pharo13.0-SNAPSHOT-64bit-e698f20169.image priorSource: 314!----QUIT----2025-06-26T10:23:59.132292+02:00 Pharo13.0-SNAPSHOT-64bit-e698f20169.image priorSource: 420!Object << #Ride	layout: FixedLayout;	traits: {};	slots: {		#rideID.		#pickupLocation.		#dropoffLocation.		#distance.		#fare	};	sharedVariables: {};	sharedPools: {};	tag: '' ;	package: 'RideSharingSystem'!25-07-13T22:32:54.870019-04:00 RideSharingSmalltalk.image priorSource: 526!----QUIT/NOSAVE----2025-07-13T22:32:54.874083-04:00 RideSharingSmalltalk.image priorSource: 526!----SNAPSHOT----2025-07-13T22:55:41.658224-04:00 RideSharingSmalltalk.image priorSource: 526!----SNAPSHOT----2025-07-13T22:55:41.662062-04:00 RideSharingSmalltalk.image priorSource: 1024!!Ride methodsFor: 'nil' stamp: '2025-07-13T23:01:23.935105-04:00'!initialize: anID pickup: aPickup dropoff: aDropoff distance: aDistance    rideID := anID.    pickupLocation := aPickup.    dropoffLocation := aDropoff.    distance := aDistance.    fare := 0.0.! !!Ride methodsFor: 'nil' stamp: '2025-07-13T23:03:47.483581-04:00'!calculateFare    self shouldNotImplement! !!Ride methodsFor: 'nil' stamp: '2025-07-13T23:04:07.542526-04:00'!rideDetails    Transcript show: 'Ride ID: ', rideID; cr.    Transcript show: '  Pickup: ', pickupLocation; cr.    Transcript show: '  Dropoff: ', dropoffLocation; cr.    Transcript show: '  Distance: ', distance asString, ' miles'; cr.    Transcript show: '  Fare: $', fare asString; cr.! !!Ride methodsFor: 'nil' stamp: '2025-07-13T23:04:26.423927-04:00'!getFare    ^ fare! !!Ride methodsFor: 'nil' stamp: '2025-07-13T23:04:41.748737-04:00'!getRideID    ^ rideID! !!Ride methodsFor: 'nil' stamp: '2025-07-13T23:04:52.041924-04:00'!setFare: aFare    fare := aFare! !Ride removeSelector: #calculateFare!Ride removeSelector: #getFare!Ride removeSelector: #getRideID!Ride removeSelector: #rideDetails!!Ride methodsFor: 'nil' stamp: '2025-07-13T23:06:41.784162-04:00'!rideDetails    Transcript show: 'Ride ID: ', rideID; cr.    Transcript show: '  Pickup: ', pickupLocation; cr.    Transcript show: '  Dropoff: ', dropoffLocation; cr.    Transcript show: '  Distance: ', distance asString, ' miles'; cr.    Transcript show: '  Fare: $', fare asString; cr.! !!Ride methodsFor: 'initialization' stamp: '2025-07-13T23:08:30.254688-04:00'!getFare    ^ fare! !!Ride methodsFor: 'initialization' stamp: '2025-07-13T23:08:39.518261-04:00'!getRideID    ^ rideID! !!Ride methodsFor: 'initialization' stamp: '2025-07-13T23:08:48.59157-04:00' prior: 4419!setFare: aFare    fare := aFare! !!Ride methodsFor: 'initialization' stamp: '2025-07-13T23:09:49.356999-04:00'!calculateFare    self shouldNotImplement! !Object << #StandardRide	layout: FixedLayout;	traits: {};	slots: {};	sharedVariables: {};	sharedPools: {};	tag: '' ;	package: 'RideSharingSystem'!!StandardRide methodsFor: 'nil' stamp: '2025-07-13T23:11:34.064681-04:00'!initialize: anID pickup: aPickup dropoff: aDropoff distance: aDistance    super initialize: anID pickup: aPickup dropoff: aDropoff distance: aDistance.    self calculateFare.! !----QUIT----2025-07-13T23:12:31.645348-04:00 RideSharingSmalltalk.image priorSource: 1119!----QUIT----2025-07-13T23:12:31.647721-04:00 RideSharingSmalltalk.image priorSource: 3608!Ride << #StandardRide	slots: {};	package: 'RideSharingSystem'!!StandardRide methodsFor: 'nil' stamp: '2025-07-18T21:33:26.013914-04:00'!calculateFare    | ratePerMile | "Declare local variable"    ratePerMile := 2.0.    self setFare: (distance * ratePerMile). "Use the setter defined in Ride"! !Ride << #PremiumRide    layout: FixedLayout;    traits: {};    slots: {};     sharedVariables: {};    sharedPools: {};    tag: '';    package: 'RideSharingSystem'!!PremiumRide methodsFor: 'nil' stamp: '2025-07-18T21:36:57.134206-04:00'!initialize: anID pickup: aPickup dropoff: aDropoff distance: aDistance    super initialize: anID pickup: aPickup dropoff: aDropoff distance: aDistance.    self calculateFare.! !!PremiumRide methodsFor: 'initialization' stamp: '2025-07-18T21:37:08.798555-04:00'!calculateFare    | ratePerMile premiumSurcharge | "Declare local variables"    ratePerMile := 3.5.    premiumSurcharge := 5.0.    self setFare: (distance * ratePerMile + premiumSurcharge). "Use the setter defined in Ride"! !Object << #Driver    layout: FixedLayout;    traits: {};    slots: {        #driverID.        #name.        #rating.        #assignedRides     };    sharedVariables: {};    sharedPools: {};    tag: '';    package: 'RideSharingSystem'!!Driver methodsFor: 'nil' stamp: '2025-07-18T21:38:44.358019-04:00'!initialize: anID name: aName rating: aRating    driverID := anID.    name := aName.    rating := aRating.    assignedRides := OrderedCollection new. "Initialize an empty collection for rides"! !!Driver methodsFor: 'initialization' stamp: '2025-07-18T21:38:56.626658-04:00'!addRide: aRide    assignedRides add: aRide.! !!Driver methodsFor: 'initialization' stamp: '2025-07-18T21:39:16.472277-04:00'!getDriverInfo    Transcript show: Character cr, '--- Driver Details ---'; cr.    Transcript show: 'Driver ID: ', driverID; cr.    Transcript show: 'Name: ', name; cr.    Transcript show: 'Rating: ', rating asString, '/5.0'; cr.    Transcript show: 'Completed Rides (', assignedRides size asString, '):'; cr.    assignedRides isEmpty        ifTrue: [ Transcript show: '  No rides completed yet.'; cr. ]        ifFalse: [            assignedRides do: [:eachRide |                eachRide rideDetails. "Polymorphic call"                Transcript show: '--------------------'; cr.            ].        ].! !Object << #Rider    layout: FixedLayout;    traits: {};    slots: {        #riderID.        #name.        #requestedRides     };    sharedVariables: {};    sharedPools: {};    tag: '';    package: 'RideSharingSystem'!!Rider methodsFor: 'nil' stamp: '2025-07-18T21:40:15.245472-04:00'!initialize: anID name: aName    riderID := anID.    name := aName.    requestedRides := OrderedCollection new. "Initialize an empty collection for rides"! !!Rider methodsFor: 'nil' stamp: '2025-07-18T21:40:32.605241-04:00'!requestRide: aRide    Transcript show: Character cr, name, ' requested a ride.'; cr.    aRide rideDetails. "Show requested ride details"    requestedRides add: aRide.! !!Rider methodsFor: 'nil' stamp: '2025-07-18T21:40:52.289082-04:00'!viewRides    Transcript show: Character cr, '--- ', name, '''s Ride History ---'; cr.    requestedRides isEmpty        ifTrue: [ Transcript show: '  No rides requested yet.'; cr. ]        ifFalse: [            requestedRides do: [:eachRide |                eachRide rideDetails. "Polymorphic call"                Transcript show: '--------------------'; cr.            ].        ].! !!Rider methodsFor: 'as yet unclassified' stamp: '2025-07-18T21:43:51.44317-04:00' prior: 13413!requestRide: aRide    | messageString | "Declare a local variable"    messageString := name, ' requested a ride.'.    Transcript show: Character cr. "Print newline first for clean output"    Transcript show: messageString; cr.    aRide rideDetails.    requestedRides add: aRide.! !!Object methodsFor: 'nil' stamp: '2025-07-19T08:42:57.085997-04:00'!demonstrateSystemFunctionality    | sandesh ride1 ride2 ride3 alice completedRide1 completedRide2 completedRide3 allRides |    "Clear the Transcript (console) before running"    Transcript clear.    Transcript show: '--- Pharo Ride Sharing System Demonstration ---'; cr.    "Create a Rider"    sandesh := Rider new initialize: 'R001' name: 'Sandesh Shrestha'.    "Create some rides"    ride1 := StandardRide new initialize: 'S001' pickup: 'Downtown' dropoff: 'Suburb A' distance: 10.5.    ride2 := PremiumRide new initialize: 'P002' pickup: 'Airport' dropoff: 'City Center' distance: 25.0.    ride3 := StandardRide new initialize: 'S003' pickup: 'Park' dropoff: 'Museum' distance: 3.2.    "Rider requests rides"    sandesh requestRide: ride1.    sandesh requestRide: ride2.    sandesh requestRide: ride3.    "Create a Driver"    alice := Driver new initialize: 'D001' name: 'Alice Smith' rating: 4.8.    "Simulate assigning rides to a driver.    In Pharo, objects are passed by reference, so you can directly assign the requested rides.    No need for unique_ptr like in C++ or creating new objects for the driver's list,    unless you want to explicitly model distinct ride instances for each.    For simplicity, we'll create new ones here just like in the C++ example's intent."    completedRide1 := StandardRide new initialize: 'S001-C' pickup: 'Downtown' dropoff: 'Suburb A' distance: 10.5.    completedRide2 := PremiumRide new initialize: 'P002-C' pickup: 'Airport' dropoff: 'City Center' distance: 25.0.    completedRide3 := StandardRide new initialize: 'S003-C' pickup: 'Park' dropoff: 'Museum' distance: 3.2.    alice addRide: completedRide1.    alice addRide: completedRide2.    alice addRide: completedRide3.    "View driver information"    alice getDriverInfo.    "View rider's ride history"    sandesh viewRides.    "Demonstrate polymorphism by storing different ride types in a collection"    Transcript show: Character cr, '--- Polymorphism Demonstration (List of All Rides in System) ---'; cr.    allRides := OrderedCollection new.    allRides add: (StandardRide new initialize: 'Poly01' pickup: 'Library' dropoff: 'Cafe' distance: 7.0).    allRides add: (PremiumRide new initialize: 'Poly02' pickup: 'Mall' dropoff: 'Home' distance: 4.5).    allRides add: (StandardRide new initialize: 'Poly03' pickup: 'Office' dropoff: 'Gym' distance: 2.0).    allRides add: (PremiumRide new initialize: 'Poly04' pickup: 'School' dropoff: 'Park' distance: 12.0).    allRides do: [:eachRide |        eachRide calculateFare. "Polymorphic call"        eachRide rideDetails.   "Polymorphic call"        Transcript show: '--------------------'; cr.    ].    Transcript show: Character cr, '--- Demonstration Complete ---'; cr.! !!Driver methodsFor: 'initialization' stamp: '2025-07-20T17:24:24.356328-04:00' prior: 11123!getDriverInfo    Transcript show: Character cr asString, '--- Driver Details ---'; cr. "FIX THIS LINE"    Transcript show: 'Driver ID: ', driverID; cr.    Transcript show: 'Name: ', name; cr.    Transcript show: 'Rating: ', rating asString, '/5.0'; cr.    Transcript show: 'Completed Rides (', assignedRides size asString, '):'; cr.    assignedRides isEmpty        ifTrue: [ Transcript show: '  No rides completed yet.'; cr. ]        ifFalse: [            assignedRides do: [:eachRide |                eachRide rideDetails.                Transcript show: '--------------------'; cr.            ].        ].! !!Driver methodsFor: 'initialization' stamp: '2025-07-20T17:24:42.238538-04:00' prior: 21339!getDriverInfo    Transcript        cr; "Start with a new line"        show: '--- Driver Details ---';        cr.    Transcript show: 'Driver ID: ', driverID; cr.    Transcript show: 'Name: ', name; cr.    Transcript show: 'Rating: ', rating asString, '/5.0'; cr.    Transcript show: 'Completed Rides (', assignedRides size asString, '):'; cr.    assignedRides isEmpty        ifTrue: [ Transcript show: '  No rides completed yet.'; cr. ]        ifFalse: [            assignedRides do: [:eachRide |                eachRide rideDetails.                Transcript show: '--------------------'; cr.            ].        ].! !!Driver methodsFor: 'initialization' stamp: '2025-07-20T17:25:27.900936-04:00' prior: 22775!getDriverInfo    "Use cascading messages for initial header output"    Transcript        cr; "Start with a new line"        show: '--- Driver Details ---';        cr.    "Construct strings first, then show them"    Transcript show: ('Driver ID: ', driverID); cr.    Transcript show: ('Name: ', name); cr.    Transcript show: ('Rating: ', rating asString, '/5.0'); cr.    Transcript show: ('Completed Rides (', assignedRides size asString, '):'); cr.    assignedRides isEmpty        ifTrue: [ Transcript show: '  No rides completed yet.'; cr. ]        ifFalse: [            assignedRides do: [:eachRide |                eachRide rideDetails.                Transcript show: '--------------------'; cr.            ].        ].! !!Driver methodsFor: 'initialization' stamp: '2025-07-20T17:26:14.464179-04:00' prior: 24237!getDriverInfo    Transcript        cr; "Start with a new line"        show: '--- Driver Details ---';        cr.    Transcript show: ('Driver ID: ', driverID); cr.    Transcript show: ('Name: ', name); cr.    Transcript show: ('Rating: ', rating asString, '/5.0'); cr.    Transcript show: ('Completed Rides (', assignedRides size asString, '):'); cr.    assignedRides isEmpty        ifTrue: [ Transcript show: '  No rides completed yet.'; cr. ]        ifFalse: [            assignedRides do: [:eachRide |                eachRide rideDetails.                Transcript show: '--------------------'; cr.            ].        ].! !!Rider methodsFor: 'as yet unclassified' stamp: '2025-07-20T17:26:58.47562-04:00' prior: 14875!requestRide: aRide    | messageString | "Declare a local variable"    messageString := name, ' requested a ride.'.    Transcript show: Character cr; show: (name, ' requested a ride.'); cr.    Transcript show: messageString; cr.    aRide rideDetails.    requestedRides add: aRide.! !----SNAPSHOT----2025-07-20T17:29:01.127031-04:00 RideSharingSmalltalk.image priorSource: 3700!----SNAPSHOT----2025-07-20T17:29:01.129592-04:00 RideSharingSmalltalk.image priorSource: 13990!Rider removeSelector: #initialize:name:!!Rider methodsFor: 'initialization' stamp: '2025-07-20T17:34:54.617914-04:00'!initialize    super initialize.    requestedRides := OrderedCollection new.    name := ''.! !!Rider methodsFor: 'as yet unclassified' stamp: '2025-07-20T17:42:18.765781-04:00' prior: 27405!requestRide: aRide    Transcript        cr; "Start with a new line"        show: name; "Show rider's name"        show: ' requested a ride.'; "Append the rest of the message"        cr. "Add a carriage return"    aRide rideDetails. "Show requested ride details"    requestedRides add: aRide.! !!Ride methodsFor: 'initialization' stamp: '2025-07-20T17:42:59.208442-04:00' prior: 4905!rideDetails    Transcript show: ('Ride ID: ', rideID); cr.    Transcript show: ('  Pickup: ', pickupLocation); cr.    Transcript show: ('  Dropoff: ', dropoffLocation); cr.    Transcript show: ('  Distance: ', distance asString, ' miles'); cr.    Transcript show: ('  Fare: $', fare asString); cr.! !!Driver methodsFor: 'initialization' stamp: '2025-07-20T17:43:20.582682-04:00' prior: 25919!getDriverInfo    Transcript        cr; "Start with a new line"        show: '--- Driver Details ---';        cr.    Transcript show: ('Driver ID: ', driverID); cr.    Transcript show: ('Name: ', name); cr.    Transcript show: ('Rating: ', rating asString, '/5.0'); cr.    Transcript show: ('Completed Rides (', assignedRides size asString, '):'); cr.    assignedRides isEmpty        ifTrue: [ Transcript show: '  No rides completed yet.'; cr. ]        ifFalse: [            assignedRides do: [:eachRide |                eachRide rideDetails.                Transcript show: '--------------------'; cr.            ].        ].! !!Rider methodsFor: 'as yet unclassified' stamp: '2025-07-20T17:43:37.970746-04:00' prior: 29001!requestRide: aRide    Transcript        cr; "Start with a new line"        show: name; "Show rider's name"        show: ' requested a ride.'; "Append the rest of the message"        cr. "Add a carriage return"    aRide rideDetails. "Show requested ride details"    requestedRides add: aRide.! !!Rider methodsFor: 'as yet unclassified' stamp: '2025-07-20T17:43:53.619282-04:00' prior: 13895!viewRides    Transcript        cr; "Start with a new line"        show: '--- ', name, '''s Ride History ---'; "Concatenate name with string before showing"        cr.    requestedRides isEmpty        ifTrue: [ Transcript show: '  No rides requested yet.'; cr. ]        ifFalse: [            requestedRides do: [:eachRide |                eachRide rideDetails.                Transcript show: '--------------------'; cr.            ].        ].! !!Object methodsFor: 'as yet unclassified' stamp: '2025-07-20T17:44:18.362527-04:00' prior: 15589!demonstrateSystemFunctionality    | sandesh ride1 ride2 ride3 alice completedRide1 completedRide2 completedRide3 allRides |    "Clear the Transcript (console) before running"    Transcript clear.    Transcript show: '--- Pharo Ride Sharing System Demonstration ---'; cr.    "Create a Rider"    sandesh := Rider new initialize: 'R001' name: 'Sandesh Shrestha'.    "Create some rides"    ride1 := StandardRide new initialize: 'S001' pickup: 'Downtown' dropoff: 'Suburb A' distance: 10.5.    ride2 := PremiumRide new initialize: 'P002' pickup: 'Airport' dropoff: 'City Center' distance: 25.0.    ride3 := StandardRide new initialize: 'S003' pickup: 'Park' dropoff: 'Museum' distance: 3.2.    "Rider requests rides"    sandesh requestRide: ride1.    sandesh requestRide: ride2.    sandesh requestRide: ride3.    "Create a Driver"    alice := Driver new initialize: 'D001' name: 'Alice Smith' rating: 4.8.    "Simulate assigning rides to a driver."    completedRide1 := StandardRide new initialize: 'S001-C' pickup: 'Downtown' dropoff: 'Suburb A' distance: 10.5.    completedRide2 := PremiumRide new initialize: 'P002-C' pickup: 'Airport' dropoff: 'City Center' distance: 25.0.    completedRide3 := StandardRide new initialize: 'S003-C' pickup: 'Park' dropoff: 'Museum' distance: 3.2.    alice addRide: completedRide1.    alice addRide: completedRide2.    alice addRide: completedRide3.    "View driver information"    alice getDriverInfo.    "View rider's ride history"    sandesh viewRides.    "Demonstrate polymorphism by storing different ride types in a collection"    Transcript cr; show: '--- Polymorphism Demonstration (List of All Rides in System) ---'; cr.    allRides := OrderedCollection new.    allRides add: (StandardRide new initialize: 'Poly01' pickup: 'Library' dropoff: 'Cafe' distance: 7.0).    allRides add: (PremiumRide new initialize: 'Poly02' pickup: 'Mall' dropoff: 'Home' distance: 4.5).    allRides add: (StandardRide new initialize: 'Poly03' pickup: 'Office' dropoff: 'Gym' distance: 2.0).    allRides add: (PremiumRide new initialize: 'Poly04' pickup: 'School' dropoff: 'Park' distance: 12.0).    allRides do: [:eachRide |        eachRide calculateFare. "Polymorphic call"        eachRide rideDetails.   "Polymorphic call"        Transcript show: '--------------------'; cr.    ].    Transcript cr; show: '--- Demonstration Complete ---'; cr.! !!Ride methodsFor: 'initialization' stamp: '2025-07-20T17:46:36.749776-04:00' prior: 29785!rideDetails    Transcript        nextPutAll: 'Ride ID: '; nextPutAll: rideID; cr;        nextPutAll: '  Pickup: '; nextPutAll: pickupLocation; cr;        nextPutAll: '  Dropoff: '; nextPutAll: dropoffLocation; cr;        nextPutAll: '  Distance: '; nextPutAll: distance asString; nextPutAll: ' miles'; cr;        nextPutAll: '  Fare: $'; nextPutAll: fare asString; cr.! !!Rider methodsFor: 'as yet unclassified' stamp: '2025-07-20T17:49:41.653306-04:00' prior: 32869!viewRides    Transcript        cr; "Start with a new line"        nextPutAll: '--- '; nextPutAll: name; nextPutAll: '''s Ride History ---';        cr.    requestedRides isEmpty        ifTrue: [ Transcript nextPutAll: '  No rides requested yet.'; cr. ]        ifFalse: [            requestedRides do: [:eachRide |                eachRide rideDetails.                Transcript nextPutAll: '--------------------'; cr.            ].        ].! !!Driver methodsFor: 'initialization' stamp: '2025-07-20T17:49:54.539227-04:00' prior: 30583!getDriverInfo    Transcript        cr; "Start with a new line"        nextPutAll: '--- Driver Details ---';        cr.    Transcript        nextPutAll: 'Driver ID: '; nextPutAll: driverID; cr;        nextPutAll: 'Name: '; nextPutAll: name; cr;        nextPutAll: 'Rating: '; nextPutAll: rating asString; nextPutAll: '/5.0'; cr;        nextPutAll: 'Completed Rides ('; nextPutAll: assignedRides size asString; nextPutAll: '):'; cr.    assignedRides isEmpty        ifTrue: [ Transcript nextPutAll: '  No rides completed yet.'; cr. ]        ifFalse: [            assignedRides do: [:eachRide |                eachRide rideDetails.                Transcript nextPutAll: '--------------------'; cr.            ].        ].! !----SNAPSHOT----2025-07-20T17:53:56.44726-04:00 RideSharingSmalltalk.image priorSource: 14086!----SNAPSHOT----2025-07-20T17:53:56.450207-04:00 RideSharingSmalltalk.image priorSource: 21266!!Rider methodsFor: 'initialization' stamp: '2025-07-20T17:56:56.619603-04:00'!initialize: anID name: aName    riderID := anID.    name := aName.    requestedRides := OrderedCollection new.! !!Object methodsFor: 'initialization' stamp: '2025-07-26T10:37:45.69284-04:00' prior: 33983!demonstrateSystemFunctionality    | sandesh ride1 ride2 ride3 alice completedRide1 completedRide2 completedRide3 allRides |    "Clear the Transcript (console) before running"    Transcript clear  a StThreadSafeTranscript.    Transcript show: '--- Pharo Ride Sharing System Demonstration ---'; cr.    "Create a Rider"    sandesh := Rider new initialize: 'R001' name: 'Sandesh Shrestha'.    "Create some rides"    ride1 := StandardRide new initialize: 'S001' pickup: 'Downtown' dropoff: 'Suburb A' distance: 10.5.    ride2 := PremiumRide new initialize: 'P002' pickup: 'Airport' dropoff: 'City Center' distance: 25.0.    ride3 := StandardRide new initialize: 'S003' pickup: 'Park' dropoff: 'Museum' distance: 3.2.    "Rider requests rides"    sandesh requestRide: ride1.    sandesh requestRide: ride2.    sandesh requestRide: ride3.    "Create a Driver"    alice := Driver new initialize: 'D001' name: 'Alice Smith' rating: 4.8.    "Simulate assigning rides to a driver."    completedRide1 := StandardRide new initialize: 'S001-C' pickup: 'Downtown' dropoff: 'Suburb A' distance: 10.5.    completedRide2 := PremiumRide new initialize: 'P002-C' pickup: 'Airport' dropoff: 'City Center' distance: 25.0.    completedRide3 := StandardRide new initialize: 'S003-C' pickup: 'Park' dropoff: 'Museum' distance: 3.2.    alice addRide: completedRide1.    alice addRide: completedRide2.    alice addRide: completedRide3.    "View driver information"    alice getDriverInfo.    "View rider's ride history"    sandesh viewRides.    "Demonstrate polymorphism by storing different ride types in a collection"    Transcript cr; show: '--- Polymorphism Demonstration (List of All Rides in System) ---'; cr.    allRides := OrderedCollection new.    allRides add: (StandardRide new initialize: 'Poly01' pickup: 'Library' dropoff: 'Cafe' distance: 7.0).    allRides add: (PremiumRide new initialize: 'Poly02' pickup: 'Mall' dropoff: 'Home' distance: 4.5).    allRides add: (StandardRide new initialize: 'Poly03' pickup: 'Office' dropoff: 'Gym' distance: 2.0).    allRides add: (PremiumRide new initialize: 'Poly04' pickup: 'School' dropoff: 'Park' distance: 12.0).    allRides do: [:eachRide |        eachRide calculateFare. "Polymorphic call"        eachRide rideDetails.   "Polymorphic call"        Transcript show: '--------------------'; cr.    ].    Transcript cr; show: '--- Demonstration Complete ---'; cr.! !!Object methodsFor: 'initialization' stamp: '2025-07-26T10:37:56.0589-04:00' prior: 43497!demonstrateSystemFunctionality    | sandesh ride1 ride2 ride3 alice completedRide1 completedRide2 completedRide3 allRides |    "Clear the Transcript (console) before running"    Transcript clear.    Transcript show: '--- Pharo Ride Sharing System Demonstration ---'; cr.    "Create a Rider"    sandesh := Rider new initialize: 'R001' name: 'Sandesh Shrestha'.    "Create some rides"    ride1 := StandardRide new initialize: 'S001' pickup: 'Downtown' dropoff: 'Suburb A' distance: 10.5.    ride2 := PremiumRide new initialize: 'P002' pickup: 'Airport' dropoff: 'City Center' distance: 25.0.    ride3 := StandardRide new initialize: 'S003' pickup: 'Park' dropoff: 'Museum' distance: 3.2.    "Rider requests rides"    sandesh requestRide: ride1.    sandesh requestRide: ride2.    sandesh requestRide: ride3.    "Create a Driver"    alice := Driver new initialize: 'D001' name: 'Alice Smith' rating: 4.8.    "Simulate assigning rides to a driver."    completedRide1 := StandardRide new initialize: 'S001-C' pickup: 'Downtown' dropoff: 'Suburb A' distance: 10.5.    completedRide2 := PremiumRide new initialize: 'P002-C' pickup: 'Airport' dropoff: 'City Center' distance: 25.0.    completedRide3 := StandardRide new initialize: 'S003-C' pickup: 'Park' dropoff: 'Museum' distance: 3.2.    alice addRide: completedRide1.    alice addRide: completedRide2.    alice addRide: completedRide3.    "View driver information"    alice getDriverInfo.    "View rider's ride history"    sandesh viewRides.    "Demonstrate polymorphism by storing different ride types in a collection"    Transcript cr; show: '--- Polymorphism Demonstration (List of All Rides in System) ---'; cr.    allRides := OrderedCollection new.    allRides add: (StandardRide new initialize: 'Poly01' pickup: 'Library' dropoff: 'Cafe' distance: 7.0).    allRides add: (PremiumRide new initialize: 'Poly02' pickup: 'Mall' dropoff: 'Home' distance: 4.5).    allRides add: (StandardRide new initialize: 'Poly03' pickup: 'Office' dropoff: 'Gym' distance: 2.0).    allRides add: (PremiumRide new initialize: 'Poly04' pickup: 'School' dropoff: 'Park' distance: 12.0).    allRides do: [:eachRide |        eachRide calculateFare. "Polymorphic call"        eachRide rideDetails.   "Polymorphic call"        Transcript show: '--------------------'; cr.    ].    Transcript cr; show: '--- Demonstration Complete ---'; cr.! !----SNAPSHOT----2025-07-26T11:21:43.207432-04:00 RideSharingSmalltalk.image priorSource: 21362!----SNAPSHOT----2025-07-26T11:21:43.208338-04:00 RideSharingSmalltalk.image priorSource: 26708!